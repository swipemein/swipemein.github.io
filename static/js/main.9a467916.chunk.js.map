{"version":3,"sources":["assets/meal.jpg","components/Nav.js","views/Home.js","views/Profile.js","Objects.js","components/Swipe.js","views/Dashboard.js","views/SwipeView.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SwipeNav","Brand","href","Collapse","className","Link","Component","Home","state","class","title","text","InfoCard","Body","Title","this","props","Text","Profile","name","kerb","email","anon","rep","Group","Label","Control","placeholder","plaintext","readOnly","type","Check","label","checked","SwipeObject","location","time","Date","amount","claimed","owner","active","cancelled","Swipe","swipe","Subtitle","toTimeString","Dashboard","swipes","SwipeView","App","basename","process","exact","path","render","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9a467916.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/meal.cf966b5e.jpg\";","import React, { Component} from 'react';\r\n\r\nimport * as rb from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../site.css';\r\n\r\nexport default class SwipeNav extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <rb.Navbar>\r\n                <rb.Navbar.Brand href='/'>SwipeMeIn</rb.Navbar.Brand>\r\n                <rb.Navbar.Collapse>\r\n                    <rb.Nav className='ml-auto'>\r\n                        <rb.Nav.Link href='#/dashboard'>Dashboard</rb.Nav.Link>\r\n                        <rb.Nav.Link href='#/profile'>Profile</rb.Nav.Link>\r\n                        <rb.Nav.Link href='#/login'>Login</rb.Nav.Link>\r\n\r\n                    </rb.Nav>\r\n                </rb.Navbar.Collapse>\r\n            </rb.Navbar>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport SwipeNav from '../components/Nav.js';\r\nimport meal from '../assets/meal.jpg';\r\n\r\nimport * as rb from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default class Home extends Component { \r\n  state = { \r\n  }\r\n  \r\n  render () {                                   \r\n      return (\r\n         <div>\r\n            <SwipeNav/>\r\n            <div class='container-fluid homephotos'>\r\n\r\n               <div class='hometitle container'>\r\n                  <h2>SwipeMeIn</h2>\r\n               </div>\r\n               <div class='homeinfo container-fluid'>\r\n                  <div class='col-xs-4 homedescription'>\r\n                     <div class='container'>\r\n                        <h3>What is SwipeMeIn?</h3>\r\n\r\n                     </div>\r\n                     <div class='container'>\r\n                        <p>We’ve all been there - it’s 7 PM, you’re on campus, and you’re hungry. You have two options: spend an absurd amount of money on on-campus dining, or ask a friend to lend you a swipe.</p>\r\n                        <p>With meal plan minimums increasing and limited swipe donation programs to take advantage of, countless students end each year with extra swipes that are wasted. SwipeMeIn is a platform for those with extra swipes to make the most of their surplus, and the hungry to score a free meal.</p>\r\n\r\n                     </div>\r\n                     <div class='homedirections container'>\r\n                        <InfoCard title=\"Log in\" text=\"asdf\"/>\r\n                        <InfoCard title=\"Add/Claim Swipe\" />\r\n                        <InfoCard title=\"View Swipe Details\" />\r\n                        <InfoCard title=\"Get Swiped!\" />\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nclass InfoCard extends Component {\r\n   render() {\r\n      return (\r\n         // <div class='col-xs-1'>\r\n            <rb.Card>\r\n               <rb.Card.Body>\r\n                  <rb.Card.Title>{this.props.title}</rb.Card.Title>\r\n                  <rb.Card.Text>{this.props.text}</rb.Card.Text>\r\n               </rb.Card.Body>\r\n            </rb.Card>\r\n         // </div>\r\n      );\r\n   }\r\n}\r\n","import React, { Component } from 'react';\r\nimport SwipeNav from '../components/Nav.js';\r\nimport * as rb from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default class Profile extends Component {\r\n\r\n   constructor(props) {\r\n      super(props);\r\n      \r\n      this.state = {\r\n         name: 'Christian',\r\n         kerb: 'cjscar',\r\n         email: 'cjscar@mit.edu',\r\n         anon: false,\r\n         rep: 'Good!'\r\n      }\r\n   }\r\n  \r\n   render () {                                   \r\n      return (\r\n        <div>\r\n            <SwipeNav/>\r\n            <div class='container'>\r\n               <h1 class=\"pagetitle\">Profile</h1>\r\n            </div>\r\n            <div class='container'>\r\n               <div class='container'>\r\n                  <h5>Info</h5>\r\n                  <div class='container'>\r\n                     <rb.Form>\r\n                        <rb.Form.Group>\r\n                           <rb.Form.Label>Name:</rb.Form.Label>\r\n                           <rb.Form.Control placeholder={this.state.name}/>\r\n                        </rb.Form.Group>\r\n                        <rb.Form.Group>\r\n                           <rb.Form.Label>Kerberos:</rb.Form.Label>\r\n                           <rb.Form.Control plaintext readOnly placeholder={this.state.kerb}/>\r\n                        </rb.Form.Group>\r\n                        <rb.Form.Group>\r\n                           <rb.Form.Label>Email:</rb.Form.Label>\r\n                           <rb.Form.Control type=\"email\" placeholder={this.state.email} />\r\n                        </rb.Form.Group>\r\n                        <rb.Form.Group>\r\n                           <rb.Form.Label>Anonymity:</rb.Form.Label>\r\n                           <rb.Form.Check type='radio' label='Anonymous - swipers will not see your name when you claim or advertise a swipe.' \r\n                           checked={this.state.anon}/>\r\n                           <rb.Form.Check type='radio' label='Open - swipers will see your name.' checked={!this.state.anon}/>\r\n                        </rb.Form.Group>\r\n                        <rb.Form.Group>\r\n                           <rb.Form.Label>Reputation:</rb.Form.Label>\r\n                           <rb.Form.Control plaintext readOnly placeholder={this.state.rep}/>\r\n                        </rb.Form.Group>\r\n                     </rb.Form>\r\n                  </div>\r\n                  <h5>Your swipes</h5>\r\n                  <h5>Past Swipes</h5>\r\n                  <div class='container'>\r\n\r\n                  </div>\r\n               </div>\r\n            </div>\r\n        </div>\r\n      )\r\n   }\r\n}","\r\nexport class Student {\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport default class SwipeObject {\r\n    constructor({\r\n        location=\"Maseeh\",\r\n        time = new Date(2000, 1, 21, 6, 30, 0, 0),\r\n        amount = 1,\r\n        claimed = 0,\r\n        owner = \"me\",\r\n        active = true,\r\n        cancelled = false\r\n    } = {\r\n        location: \"Maseeh\",\r\n        time: new Date(2000, 1, 21, 6, 30, 0, 0),\r\n        amount: 1,\r\n        claimed: 0,\r\n        owner: \"me\",\r\n        active: true,\r\n        cancelled: false\r\n    }) {\r\n        this.location = location;\r\n        this.time = time;\r\n        this.amount = amount;\r\n        this.claimed = claimed;\r\n        this.owner = owner;\r\n        this.active = active;\r\n        this.cancelled = cancelled;\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport SwipeObject from '../Objects.js';\r\nimport * as rb from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default class Swipe extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            swipe: this.props.swipe\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let time = this.state.time;\r\n        return (\r\n            <div class='swipecard container'>\r\n                <div class='col-xs-4'>\r\n                    <rb.Card>\r\n                        <rb.Card.Body>\r\n                            <rb.Card.Title>{ this.state.swipe.location }</rb.Card.Title>\r\n                            <rb.Card.Subtitle>{ this.state.swipe.time.toTimeString() }</rb.Card.Subtitle>\r\n                            <rb.Card.Text>\r\n\r\n                            </rb.Card.Text>\r\n                            <rb.Button>Claim Swipe</rb.Button>\r\n                            <rb.Card.Link href='#/swipeinfo'>Info</rb.Card.Link>\r\n                        </rb.Card.Body>\r\n                    </rb.Card>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport SwipeNav from '../components/Nav.js';\r\nimport Swipe from '../components/Swipe.js';\r\nimport SwipeObject from '../Objects.js';\r\n\r\nimport * as rb from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default class Dashboard extends Component { \r\n  state = { \r\n  }\r\n  \r\n  render () {\r\n      let swipes = [<Swipe swipe={new SwipeObject()}/>, <Swipe swipe={new SwipeObject()}/>];                                \r\n      return (\r\n        <div>\r\n            <SwipeNav/>\r\n            <div class='container'>\r\n                <h1 class='pagetitle'>Swipe Dashboard</h1>\r\n            </div>\r\n            {/* <div class='container'> */}\r\n                {/* <rb.Accordion>\r\n                    <rb.Card>\r\n                        <rb.Accordion.Toggle as={rb.Card.Header}>\r\n                            <h5>Filter</h5>\r\n                        </rb.Accordion.Toggle>\r\n                        <rb.Accordion.Collapse>\r\n                            <rb.Card.Body>\r\n                                <rb.Form>\r\n                                    <rb.Form.Group>\r\n                                        <rb.Form.Label></rb.Form.Label>\r\n                                    </rb.Form.Group>\r\n                                </rb.Form>\r\n                            </rb.Card.Body>\r\n                        </rb.Accordion.Collapse>\r\n                    </rb.Card>\r\n                </rb.Accordion> */}\r\n            {/* </div> */}\r\n            {swipes}\r\n        </div>\r\n      )\r\n   }\r\n}","import React, { Component } from 'react';\r\nimport SwipeNav from '../components/Nav.js';\r\nimport SwipeObject from '../Objects.js';\r\nimport * as rb from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default class SwipeView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            swipe: new SwipeObject()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let swipe = this.state.swipe;\r\n        return (\r\n            <div class='swipeView'>\r\n                <SwipeNav />\r\n                <div class='container'>\r\n                    <div class='col-xs-4'>\r\n                        <rb.Card>\r\n                            <rb.Card.Body>\r\n                                <rb.Card.Title>{ swipe.location }</rb.Card.Title>\r\n                                <rb.Card.Subtitle>{ swipe.time.toTimeString() }</rb.Card.Subtitle>\r\n                                <rb.Card.Text>\r\n                                    <ul>\r\n                                        <li>\r\n                                            Swipes Remaining: {swipe.amount - swipe.claimed} / {swipe.amount}\r\n                                        </li>\r\n                                        <li>\r\n                                            Owner: {swipe.owner}\r\n                                        </li>\r\n                                        <li>\r\n                                            Status: {swipe.cancelled ? \"Cancelled\" : \"Open\"}\r\n                                        </li>\r\n                                        <li>\r\n                                            Active: {swipe.active ? \"Active\" : \"Retired\"}\r\n                                        </li>\r\n                                    </ul>\r\n                                </rb.Card.Text>\r\n                                <rb.Button>Claim Swipe</rb.Button>\r\n                            </rb.Card.Body>\r\n                        </rb.Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport Home from './views/Home';\nimport Profile from './views/Profile';\nimport Dashboard from './views/Dashboard';\nimport SwipeView from './views/SwipeView';\nimport {HashRouter, Route, BrowserRouter} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n        <Route exact={true} path='/' render={() => (\n          <Home />\n        )} />\n        <Route exact={true} path='/profile' render={() => (\n          <Profile />\n        )} />\n        <Route exact={true} path='/dashboard' render={() => (\n          <Dashboard />\n        )} />\n        <Route exact={true} path='/swipeinfo' render={() => (\n          <SwipeView />\n        )} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}